@page "/gamestart"
@inject IHttpClientFactory ClientFactory
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager Navigation
@inject ILogger<GameStart> Logger
@using Blazored.SessionStorage
@using System.Security.Claims
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using OmokClient.Services
@inject ISessionStorageService sessionStorage
@inject MatchingService MatchingService

<PageTitle>Game Start</PageTitle>

<h3>오목 게임</h3>

<p>오목 게임에 오신 것을 환영합니다, @userId !</p>
<button class="btn btn-primary" @onclick="StartMatching" disabled="@isMatching">매칭 시작</button>

@if (isMatching)
{
    <p>매칭 상대 찾는 중...</p>
}

@code {
    private string userId = string.Empty;
    private bool isMatching = false;
    private Timer? checkMatchTimer;

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine("GameStart page initialized.");

        userId = await sessionStorage.GetItemAsync<string>("sessionUserId") ?? string.Empty;

        // var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        // var user = authState.User;
        // if (user.Identity.IsAuthenticated)
        // {
        //     username = user.Identity.Name;
        //     Console.WriteLine($"User '{username}' is authenticated.");
        // }
        // else
        // {
        //     Logger.LogWarning("User is not authenticated. Redirecting to home page.");
        //     Navigation.NavigateTo("/");
        // }
    }

    private async Task StartMatching()
    {
        Console.WriteLine("Start matching button clicked.");
        isMatching = true; // 매칭 버튼 비활성화

        var matchResponse = await MatchingService.RequestMatchingAsync(userId);
        if (matchResponse != null && matchResponse.Result == ErrorCode.None)
        {
            Console.WriteLine("Matching request successful.");
            isMatching = true;
            StartCheckMatching();
        }
        else
        {
            Console.WriteLine($"Matching request failed: {matchResponse?.Result}");
            isMatching = false; // 매칭 실패 시 버튼 활성화
        }

        Console.WriteLine("Matching process completed.");
    }

    private void StartCheckMatching()
    {
        checkMatchTimer = new Timer(async _ =>
        {
            await CheckMatching();
        }, null, 1000, 1000); // 1초마다 CheckMatching 호출
    }

    private async Task CheckMatching()
    {
        Console.WriteLine("Checking match status...");

        var matchResponse = await MatchingService.CheckMatchingAsync(userId);
        if (matchResponse != null && matchResponse.Success == 1)
        {
            Console.WriteLine("Match found! Navigating to game page.");
            checkMatchTimer?.Dispose();
            Navigation.NavigateTo("omok", true);
        }
        else
        {
            Console.WriteLine("No match found yet.");
        }
    }
}