@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager Navigation

@* <div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">OmokClient</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="gamestart">
                <span class="bi bi-play-fill" aria-hidden="true"></span> Game Start
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="omok">
                <span class="bi bi-play-fill" aria-hidden="true"></span> Omok Game
            </NavLink>
        </div>
    </nav>
</div> *@

@code {
    private bool collapseNavMenu = true;
    private bool isAuthenticated = false; // 원래 false

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    // protected override async Task OnInitializedAsync()
    // {
    //     var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
    //     isAuthenticated = authState.User.Identity.IsAuthenticated;
    // }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void Logout()
    {
        ((CustomAuthenticationStateProvider)AuthenticationStateProvider).NotifyUserLoggedOut();
        Navigation.NavigateTo("/");
    }
}
